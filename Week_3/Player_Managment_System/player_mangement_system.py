# -*- coding: utf-8 -*-
"""Player Mangement System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p68amhp1UdP-dfERvY0Oflg6augQ91ED

# Player Mangement System
"""

# model.py
class Player:
    def __init__(self, name, team, age, nationality):
        self.name = name
        self.team = team
        self.age = age
        self.nationality = nationality

    def __str__(self):
        return "Name: {}, Team: {}, Age: {}, Nationality: {}".format(self.name, self.team, self.age, self.nationality)


# view.py
class PlayerView:
    def display_players(self, players):
        if not players:
            print("No players available.")
            return
        print("\nPlayers in Team:")
        for player in players:
            print(player)


    def get_player_details(self):
        name = input("Enter player name: ")
        team = input("Enter team name: ")
        age = input("Enter age: ")
        nationality = input("Enter nationality: ")
        return Player(name, team, age, nationality)

    def prompt_user(self):
        print("\nOptions:")
        print("1. Add Player")
        print("2. View Player")
        print("3. Update Player")
        print("4. Delete Player")
        print("5. Exit")
        return input("Choose an option: ")


# controller.py

class PlayerController:
  def __init__(self, view):
    self.view = view
    self.players = []

  def add_player(self):
    player = self.view.get_player_details()
    self.players.append(player)
    print(f"Added: {player}")

  def view_players(self):
    self.view.display_players(self.players)

  def update_player(self):
    name = input("Enter the name of the player to update: ")
    for player in self.players:
      if player.name == name:
        print("Updating player...")
        updated_player = self.view.get_player_details()
        player.name = updated_player.name
        player.team = updated_player.team
        player.age = updated_player.age
        player.nationality = updated_player.nationality
        print("Player updated.")
        return
    print("Player not found.")

  def delete_player(self):
    name = input("Enter the name of the book to delete: ")
    for player in self.players:
      if player.name == name:
        self.players.remove(player)
        print("Player deleted.")
        return
    print("Player not found.")


  def run(self):
    while True:
      option = self.view.prompt_user()
      if option == '1':
        self.add_player()
      elif option == '2':
        self.view_players()
      elif option == '3':
        self.update_book()
      elif option == '4':
        self.delete_book()
      elif option == '5':
        print("Exiting the library system.")
        break
      else:
        print("Invalid option. Please try again.")



if __name__ == "__main__":
    view = PlayerView()
    controller = PlayerController(view)
    controller.run()

